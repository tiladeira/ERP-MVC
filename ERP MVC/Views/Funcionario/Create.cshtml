@model ERP_MVC.Funcionario

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    <script src="~/Scripts/jquery.maskedinput-1.3.min.js"></script>    
    <script type="text/javascript" lang="javascript">
        var $IS = jQuery.noConflict();

        $IS(document).ready(function () {
            $IS("#DataNascimento").mask("99/99/9999");
            $IS("#CPF").mask("999.999.999-99");
            $IS("#RG").mask("99.999.999-9");
            $IS("#DataEmissRG").mask("99/99/9999");
            $IS("#DataAdmissao").mask("99/99/9999");
            $IS("#DataInclusao").mask("99/99/9999");
        });
    </script>
}

<h2>Novo Funcionário</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Funcionario</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Nome)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nome)
            @Html.ValidationMessageFor(model => model.Nome)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DataNascimento)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DataNascimento)
            @Html.ValidationMessageFor(model => model.DataNascimento)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Sexo)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Sexo,
                new SelectList(new List<Object>{
                    new {IdSexo = 0, Sexo = ""},
                    new {IdSexo = 1, Sexo = "M"},
                    new {IdSexo = 2, Sexo = "F"}
                }, "IdSexo", "Sexo", 0))
            @Html.ValidationMessageFor(model => model.Sexo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CPF)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CPF)
            @Html.ValidationMessageFor(model => model.CPF)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RG)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RG)
            @Html.ValidationMessageFor(model => model.RG)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OrgEmissRG)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OrgEmissRG)
            @Html.ValidationMessageFor(model => model.OrgEmissRG)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DataEmissRG)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DataEmissRG)
            @Html.ValidationMessageFor(model => model.DataEmissRG)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CNH)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CNH)
            @Html.ValidationMessageFor(model => model.CNH)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdDepartamento, "Departamento")
        </div>
        <div class="editor-field">
            @Html.DropDownList("IdDepartamento", String.Empty)
            @Html.ValidationMessageFor(model => model.IdDepartamento)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdProfissao, "Profissao")
        </div>
        <div class="editor-field">
            @Html.DropDownList("IdProfissao", String.Empty)
            @Html.ValidationMessageFor(model => model.IdProfissao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdNivel, "Nivel")
        </div>
        <div class="editor-field">
            @Html.DropDownList("IdNivel", String.Empty)
            @Html.ValidationMessageFor(model => model.IdNivel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdRegimeContratacao, "RegimeContratacao")
        </div>
        <div class="editor-field">
            @Html.DropDownList("IdRegimeContratacao", String.Empty)
            @Html.ValidationMessageFor(model => model.IdRegimeContratacao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DataAdmissao)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DataAdmissao)
            @Html.ValidationMessageFor(model => model.DataAdmissao)
        </div>

        <div class="editor-field" style="display:none;">
            @Html.DropDownList("IdBeneficio", String.Empty)
            @Html.ValidationMessageFor(model => model.IdBeneficio)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.DataInclusao)
            @Html.ValidationMessageFor(model => model.DataInclusao)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
